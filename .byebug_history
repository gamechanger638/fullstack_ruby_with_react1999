c
 render json: DocumentSerializer.new(@document) , status: :ok
  @document = Document.all
c
 render json: DocumentSerializer.new(@document) , status: :ok
 @document = Document.all
c
object.images
object.image
object.image.attached?
object
c
object.image.attached?
object.images.attached?
c
object.image.attached?c
object.image.attached?
object.image.service_url
object.image
object
c
 render json: DocumentSerializer.new(@document) , status: :ok
 @document = Document.all
c
n
account
n
c
 @current_user ||= User.find_by_id(token["user_id"])
User.find_by_id(token["user_id"])
token = JsonWebToken.decode(token) 
c
@current_user ||= User.find_by_id(token["user_id"]
c
token["user_id"]
token
token{user_id}
token.first[user_id]
token[0]
token.id
token.user_id
token = JsonWebToken.decode(token) 
JsonWebToken.decode(token) 
request.headers['token']
request.headers['token'].present?
token
c
current_user
c
current_user
c
\c
c
@document
c
object
c
document_params
c
object
object.image.attached? 
c
  @user = User.new(user_params)
c
 @user = User.new(user_params)
c
user_params
c
user_params
c
@decoded = JsonWebToken.decode(header)
c
